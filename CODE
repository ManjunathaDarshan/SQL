// Info regarding the columns

select column_name,data_type, 
from BC.INFORMATION_SCHEMA.COLUMNS 
where table_name = 'customers' 

// Time Range for order purchase

SELECT max(order_purchase_timestamp) as Latest_purchase, 
min(order_purchase_timestamp) as first_purchase, 
date_diff(max(order_purchase_timestamp),min(order_purchase_timestamp),day) as Time_range 
FROM `integral-bliss-411417.BC.orders` 

//Distinct City and States in the table
  
Select count(customer_unique_id)as n0_customer,count(distinct(customer_unique_id))as 
n1_customer,count(distinct(customer_city)) as No_city,count(distinct(customer_state)) as 
No_state 
from BC.customers 
where customer_city is not null and customer_state is not null and customer_unique_id is 
not null 

//Distribution of orders over months 

select Year,Month,No_Orders,sum (No_orders) over (partition by Year) as Year_sum 
from( 
SELECT EXTRACT(YEAR FROM order_purchase_timestamp) AS Year, 
extract(Month from order_purchase_timestamp) as Month, 
count(*) as No_Orders,       
from BC.orders 
group by Year,Month 
order by Year asc,Month asc)t 
order by Year asc,Month Asc 

//Monthly growth
select Year,Month,No_Orders,sum (No_orders) over (partition by Year) as Year_sum, 
LAG(No_Orders) OVER (ORDER BY year, month) AS prev_month_orders, 
No_Orders - LAG(No_Orders) OVER (ORDER BY year, month) AS growth  
from( 
SELECT EXTRACT(YEAR FROM order_purchase_timestamp) AS Year, 
extract(Month from order_purchase_timestamp) as Month, 
count(*) as No_Orders,  
from BC.orders 
group by Year,Month 
order by Year asc,Month asc)t 
order by Year asc,Month Asc 

//Number of orders classified based on time of day

select case  
when EXTRACT(hour FROM order_purchase_timestamp) between 0 and 6 then  '06hr' 
when EXTRACT(hour FROM order_purchase_timestamp) between 7 and 12 then  '712hr' 
when EXTRACT(hour FROM order_purchase_timestamp) between 13 and 18 then '1318hr' 
else '1923hr' 
end as times, 
count(*) as No_Orders 
from BC.orders 
group by times 
order by No_Orders 

//MOM orders placed by each state

select EXTRACT(YEAR FROM order_purchase_timestamp) AS Year, 
extract(Month from order_purchase_timestamp) as Month, 
count(*) as No_Orders,c.customer_state 
from BC.orders o join BC.customers c 
on o.customer_id = c.customer_id  
group by Year,Month,c.customer_state 
order by 3 desc,1,2 

//Customer Distribution across states

select customer_state,count(distinct(customer_unique_id)) as No_customer 
from BC.customers 
group by 1 
order by 2 desc 

//Increase in cost for Months from Jan to Aug

WITH Cost2017 AS ( 
SELECT SUM(p.payment_value) AS total_cost_2017 
FROM BC.payments p join BC.orders o on p.order_id=o.order_id 
WHERE format_date('%Y-%m',o.order_purchase_timestamp) BETWEEN '2017-01' AND '2017-08' 
), 
Cost2018 AS ( 
SELECT SUM(P.payment_value) AS total_cost_2018 
FROM BC.payments p join BC.orders o on p.order_id=o.order_id 
WHERE format_date('%Y-%m',o.order_purchase_timestamp) BETWEEN '2018-01' AND '2018-08' 
) 
SELECT total_cost_2017,total_cost_2018,((Cost2018.total_cost_2018 - 
Cost2017.total_cost_2017) / Cost2017.total_cost_2017) * 100 AS percentage_increase 
FROM Cost2017, Cost2018 

//Total and average value of order price for each state

select c.customer_state,round(sum(oi.price)) as total,round(avg(oi.price)) as average 
from BC.customers c join BC.orders o on c.customer_id=o.customer_id 
join BC.order_items oi on o.order_id=oi.order_id 
group by 1 
order by 2 desc 

//Total and average value of order freight for each state

select c.customer_state,round(sum(oi.freight_value)) as total,round(avg(oi.freight_value)) 
as average 
from BC.customers c join BC.orders o on c.customer_id=o.customer_id 
join BC.order_items oi on o.order_id=oi.order_id 
group by 1 
order by 2 desc 

//Number of days taken to deliver and estimated delivery time

SELECT FORMAT_DATE('%Y - %m - %d', order_purchase_timestamp) AS orderpurchasetime, 
FORMAT_DATE('%Y - %m - %d', order_delivered_customer_date) AS orderdeliverytime, 
FORMAT_DATE('%Y - %m - %d', order_estimated_delivery_date) AS orderestdeliverytime, 
DATE_DIFF(order_delivered_customer_date, order_purchase_timestamp, DAY) AS 
time_to_deliver, 
DATE_DIFF(order_estimated_delivery_date,order_delivered_customer_date,DAY) AS 
diff_estimated_delivery 
FROM BC.orders 
WHERE order_delivered_customer_date IS NOT NULL 
order by orderpurchasetime 

//Top 5 states with the highest & lowest average freight value.
select c.customer_state,round(sum(oi.freight_value)) as total,round(avg(oi.freight_value)) 
as average 
from BC.customers c join BC.orders o on c.customer_id=o.customer_id 
join BC.order_items oi on o.order_id=oi.order_id 
group by 1 
order by 3 desc 
limit 5 

Botttom 5 

select c.customer_state,round(sum(oi.freight_value)) as total,round(avg(oi.freight_value)) 
as average 
from BC.customers c join BC.orders o on c.customer_id=o.customer_id 
join BC.order_items oi on o.order_id=oi.order_id 
group by 1 
order by 3 asc 
limit 5 

//Top 5 states where the order delivery is really fast as compared to the estimated date of delivery.
SELECT c.customer_state,round(avg(DATE_DIFF(o.order_delivered_customer_date, 
o.order_purchase_timestamp, DAY)),2) AS avg_time_to_deliver, 
round(avg(DATE_DIFF(o.order_estimated_delivery_date, o.order_purchase_timestamp, DAY)),2) 
AS avg_est_time_to_deliver,(round(avg(DATE_DIFF(o.order_delivered_customer_date, 
o.order_purchase_timestamp, DAY)),2)-round(avg(DATE_DIFF(o.order_estimated_delivery_date, 
o.order_purchase_timestamp, DAY)),2)) as time_diff 
FROM BC.orders o join BC.customers c on o.customer_id=c.customer_id 
WHERE order_delivered_customer_date IS NOT NULL and order_status = 'delivered' 
group by 1 
order by 4 asc 
limit 5 

//Top 5 states with the highest & lowest average delivery time.

SELECT c.customer_state,round(avg(DATE_DIFF(o.order_delivered_customer_date, 
o.order_purchase_timestamp, DAY)),2) AS avg_time_to_deliver, 
FROM BC.orders o join BC.customers c on o.customer_id=c.customer_id 
WHERE order_delivered_customer_date IS NOT NULL 
group by 1 
order by 2 asc 
limit 5 

Highest avg delivery time 

SELECT c.customer_state,round(avg(DATE_DIFF(o.order_delivered_customer_date, 
o.order_purchase_timestamp, DAY)),2) AS avg_time_to_deliver, 
FROM BC.orders o join BC.customers c on o.customer_id=c.customer_id 
WHERE order_delivered_customer_date IS NOT NULL 
group by 1 
order by 2 desc 
limit 5 

//MOM no. of orders placed using different payment types.

select FORMAT_DATE('%Y - %m', order_purchase_timestamp) AS 
orderpurchasetime,count(distinct(p.order_id)) as no_orders,p.payment_type, 
from BC.payments p join BC.orders o on p.order_id=o.order_id 
group by 1,3 
ORDER BY 1 ASC

//No. of orders placed on the basis of the payment installments that have been paid.

select payment_installments,count(distinct(order_id)) as no_orders 
from BC.payments  
where payment_sequential >=1 
group by 1 
ORDER BY 1 ASC 
